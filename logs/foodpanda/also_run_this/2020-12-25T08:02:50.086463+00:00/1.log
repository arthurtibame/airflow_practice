[2020-12-25 16:02:54,082] {taskinstance.py:826} INFO - Dependencies all met for <TaskInstance: foodpanda.also_run_this 2020-12-25T08:02:50.086463+00:00 [queued]>
[2020-12-25 16:02:54,086] {taskinstance.py:826} INFO - Dependencies all met for <TaskInstance: foodpanda.also_run_this 2020-12-25T08:02:50.086463+00:00 [queued]>
[2020-12-25 16:02:54,086] {taskinstance.py:1017} INFO - 
--------------------------------------------------------------------------------
[2020-12-25 16:02:54,086] {taskinstance.py:1018} INFO - Starting attempt 1 of 1
[2020-12-25 16:02:54,086] {taskinstance.py:1019} INFO - 
--------------------------------------------------------------------------------
[2020-12-25 16:02:54,096] {taskinstance.py:1038} INFO - Executing <Task(BashOperator): also_run_this> on 2020-12-25T08:02:50.086463+00:00
[2020-12-25 16:02:54,096] {base_task_runner.py:121} INFO - Running on host: dataiku
[2020-12-25 16:02:54,096] {base_task_runner.py:122} INFO - Running: ['airflow', 'tasks', 'run', 'foodpanda', 'also_run_this', '2020-12-25T08:02:50.086463+00:00', '--job-id', '74', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/ssh_practice.py', '--cfg-path', '/tmp/tmpg9onc00j']
[2020-12-25 16:02:54,659] {base_task_runner.py:106} INFO - Job 74: Subtask also_run_this [2020-12-25 16:02:54,658] {dagbag.py:440} INFO - Filling up the DagBag from /home/ub/airflow/dags/ssh_practice.py
[2020-12-25 16:02:54,743] {base_task_runner.py:106} INFO - Job 74: Subtask also_run_this Running <TaskInstance: foodpanda.also_run_this 2020-12-25T08:02:50.086463+00:00 [running]> on host dataiku
[2020-12-25 16:02:54,758] {taskinstance.py:1232} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=arthur.sl.lin
AIRFLOW_CTX_DAG_ID=foodpanda
AIRFLOW_CTX_TASK_ID=also_run_this
AIRFLOW_CTX_EXECUTION_DATE=2020-12-25T08:02:50.086463+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2020-12-25T08:02:50.086463+00:00
[2020-12-25 16:02:54,758] {bash.py:135} INFO - Tmp dir root location: 
 /tmp
[2020-12-25 16:02:54,759] {bash.py:158} INFO - Running command: docker
[2020-12-25 16:02:54,762] {bash.py:169} INFO - Output:
[2020-12-25 16:02:54,785] {bash.py:173} INFO - 
[2020-12-25 16:02:54,786] {bash.py:173} INFO - Usage:	docker [OPTIONS] COMMAND
[2020-12-25 16:02:54,786] {bash.py:173} INFO - 
[2020-12-25 16:02:54,786] {bash.py:173} INFO - A self-sufficient runtime for containers
[2020-12-25 16:02:54,786] {bash.py:173} INFO - 
[2020-12-25 16:02:54,786] {bash.py:173} INFO - Options:
[2020-12-25 16:02:54,786] {bash.py:173} INFO -       --config string      Location of client config files (default
[2020-12-25 16:02:54,786] {bash.py:173} INFO -                            "/home/ub/.docker")
[2020-12-25 16:02:54,786] {bash.py:173} INFO -   -c, --context string     Name of the context to use to connect to the
[2020-12-25 16:02:54,786] {bash.py:173} INFO -                            daemon (overrides DOCKER_HOST env var and
[2020-12-25 16:02:54,786] {bash.py:173} INFO -                            default context set with "docker context use")
[2020-12-25 16:02:54,786] {bash.py:173} INFO -   -D, --debug              Enable debug mode
[2020-12-25 16:02:54,786] {bash.py:173} INFO -   -H, --host list          Daemon socket(s) to connect to
[2020-12-25 16:02:54,786] {bash.py:173} INFO -   -l, --log-level string   Set the logging level
[2020-12-25 16:02:54,786] {bash.py:173} INFO -                            ("debug"|"info"|"warn"|"error"|"fatal")
[2020-12-25 16:02:54,786] {bash.py:173} INFO -                            (default "info")
[2020-12-25 16:02:54,786] {bash.py:173} INFO -       --tls                Use TLS; implied by --tlsverify
[2020-12-25 16:02:54,786] {bash.py:173} INFO -       --tlscacert string   Trust certs signed only by this CA (default
[2020-12-25 16:02:54,786] {bash.py:173} INFO -                            "/home/ub/.docker/ca.pem")
[2020-12-25 16:02:54,786] {bash.py:173} INFO -       --tlscert string     Path to TLS certificate file (default
[2020-12-25 16:02:54,786] {bash.py:173} INFO -                            "/home/ub/.docker/cert.pem")
[2020-12-25 16:02:54,787] {bash.py:173} INFO -       --tlskey string      Path to TLS key file (default
[2020-12-25 16:02:54,787] {bash.py:173} INFO -                            "/home/ub/.docker/key.pem")
[2020-12-25 16:02:54,787] {bash.py:173} INFO -       --tlsverify          Use TLS and verify the remote
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   -v, --version            Print version information and quit
[2020-12-25 16:02:54,787] {bash.py:173} INFO - 
[2020-12-25 16:02:54,787] {bash.py:173} INFO - Management Commands:
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   builder     Manage builds
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   config      Manage Docker configs
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   container   Manage containers
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   context     Manage contexts
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   engine      Manage the docker engine
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   image       Manage images
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   network     Manage networks
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   node        Manage Swarm nodes
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   plugin      Manage plugins
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   secret      Manage Docker secrets
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   service     Manage services
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   stack       Manage Docker stacks
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   swarm       Manage Swarm
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   system      Manage Docker
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   trust       Manage trust on Docker images
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   volume      Manage volumes
[2020-12-25 16:02:54,787] {bash.py:173} INFO - 
[2020-12-25 16:02:54,787] {bash.py:173} INFO - Commands:
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   attach      Attach local standard input, output, and error streams to a running container
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   build       Build an image from a Dockerfile
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   commit      Create a new image from a container's changes
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   cp          Copy files/folders between a container and the local filesystem
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   create      Create a new container
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   deploy      Deploy a new stack or update an existing stack
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   diff        Inspect changes to files or directories on a container's filesystem
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   events      Get real time events from the server
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   exec        Run a command in a running container
[2020-12-25 16:02:54,787] {bash.py:173} INFO -   export      Export a container's filesystem as a tar archive
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   history     Show the history of an image
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   images      List images
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   import      Import the contents from a tarball to create a filesystem image
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   info        Display system-wide information
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   inspect     Return low-level information on Docker objects
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   kill        Kill one or more running containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   load        Load an image from a tar archive or STDIN
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   login       Log in to a Docker registry
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   logout      Log out from a Docker registry
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   logs        Fetch the logs of a container
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   pause       Pause all processes within one or more containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   port        List port mappings or a specific mapping for the container
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   ps          List containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   pull        Pull an image or a repository from a registry
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   push        Push an image or a repository to a registry
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   rename      Rename a container
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   restart     Restart one or more containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   rm          Remove one or more containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   rmi         Remove one or more images
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   run         Run a command in a new container
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   save        Save one or more images to a tar archive (streamed to STDOUT by default)
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   search      Search the Docker Hub for images
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   start       Start one or more stopped containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   stats       Display a live stream of container(s) resource usage statistics
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   stop        Stop one or more running containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   top         Display the running processes of a container
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   unpause     Unpause all processes within one or more containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   update      Update configuration of one or more containers
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   version     Show the Docker version information
[2020-12-25 16:02:54,788] {bash.py:173} INFO -   wait        Block until one or more containers stop, then print their exit codes
[2020-12-25 16:02:54,788] {bash.py:173} INFO - 
[2020-12-25 16:02:54,789] {bash.py:173} INFO - Run 'docker COMMAND --help' for more information on a command.
[2020-12-25 16:02:54,789] {bash.py:177} INFO - Command exited with return code 0
[2020-12-25 16:02:54,808] {taskinstance.py:1142} INFO - Marking task as SUCCESS. dag_id=foodpanda, task_id=also_run_this, execution_date=20201225T080250, start_date=20201225T080254, end_date=20201225T080254
[2020-12-25 16:02:54,827] {taskinstance.py:1195} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2020-12-25 16:02:54,996] {local_task_job.py:118} INFO - Task exited with return code 0
